// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/admin/login": {
            "post": {
                "description": "管理员使用用户名和密码进行登录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "管理员"
                ],
                "summary": "管理员登录",
                "parameters": [
                    {
                        "description": "管理员",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"success\":true,\"message\":\"登录成功\",\"result\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODUxODEwNjV9.Uj37YBTlIm4v5dcqEI4371oqNuyk632BYcuqZgYSFL8\"}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "{\"success\":false,\"message\":\"用户名或密码错误\",\"result\":null}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "429": {
                        "description": "{\"success\":false,\"message\":\"请求过于频繁，请稍后再试！\",\"result\":null}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/v1/admin/settings/{key}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新配置项信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "配置项"
                ],
                "summary": "更新配置项",
                "parameters": [
                    {
                        "type": "string",
                        "description": "配置项键",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "配置项新值",
                        "name": "value",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"success\":true,\"message\":\"更新成功\",\"result\":null}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "{\"success\":false,\"message\":\"请求无效或参数错误\",\"result\":null}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "{\"success\":false,\"message\":\"请登录\",result:null}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "404": {
                        "description": "{\"success\":false,\"message\":\"未找到配置项\",\"result\":null}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "429": {
                        "description": "{\"success\":false,\"message\":\"请求过于频繁，请稍后再试！\",\"result\":null}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/v1/public-settings": {
            "get": {
                "description": "获取公开的配置项信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "配置项"
                ],
                "summary": "获取公开的配置项",
                "responses": {
                    "200": {
                        "description": "{\"success\":true,\"message\":\"成功\",\"result\":{\"UPLOAD_FILE_SIZE_LIMIT\":10,...}}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "429": {
                        "description": "{\"success\":false,\"message\":\"请求过于频繁，请稍后再试！\",\"result\":null}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/v1/settings": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取所有配置项信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "配置项"
                ],
                "summary": "获取所有配置项",
                "responses": {
                    "200": {
                        "description": "{\"success\":true,\"message\":\"成功\",\"result\":[{\"key\":\"UPLOAD_FILE_SIZE_LIMIT\",\"value\":{\"data\":10},\"label\":\"上传大小限制\",\"isPublic\":true,\"createdAt\":\"2023-05-22T15:10:40.7958637+08:00\",\"updatedAt\":\"2023-05-22T15:10:40.7958637+08:00\"},{...}]}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "{\"success\":false,\"message\":\"请登录\",result:null}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "429": {
                        "description": "{\"success\":false,\"message\":\"请求过于频繁，请稍后再试！\",\"result\":null}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        },
        "/v1/system/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取系统应用程序名称和版本号",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "系统信息"
                ],
                "summary": "获取系统信息",
                "responses": {
                    "200": {
                        "description": "{\"success\":true,\"message\":\"Success\",\"result\":{\"appName\":\"GoApp\",\"appVersion\":\"1.0.0\"}}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "401": {
                        "description": "{\"success\":false,\"message\":\"请登录\",result:null}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "429": {
                        "description": "{\"success\":false,\"message\":\"请求过于频繁，请稍后再试！\",result:null}",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "utils.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {},
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{"http"},
	Title:            "Silk Road",
	Description:      "The API doc of Silk Road.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
